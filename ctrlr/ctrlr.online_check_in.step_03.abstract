<?php
/************************************************************************
 * @author	Kingsley U. Uwode II, contractor via Robert Half Technologies
 * @since	May 29 2015
 * @link	mailto:kingzmeadow@hotmail.com
 *
 * step_03:
 * Emergency Contact Info (abstract file, not to be used by itself)
 *
 * End-user's entered emergency contact information, once entered,
 * allows the end-user to proceed with the online check-in process
 */

/**
 * ctrlr_online_check_in_action_step_03()	handles step_03 within the online check-in process
 *
 * @param	ARRAY	&$env	reference to global variable '$_app_env'
 * @param	ARRAY	&$msgs	reference to variable '$main_msgs' where any messages are stored
 * @param	ARRAY	&$out	reference to variable '$output' which contains content to be rendered
 * @param	BOOLEAN	&$CRUD	specifies if the action is being called in a CReate/Update/Delete compacity
 * @return	VOID	N/A
 */
function ctrlr_online_check_in_action_step_03(&$env,&$msgs,&$out,$CRUD=FALSE){
    if($CRUD===TRUE){
        if($env['flags']['is_CRUD']===TRUE){
            # CReate / Update / Delete code lines
            $env['request'][]=array(
                'url'=>$env['API']['URL']['TR'],
                'fields'=>array(
                    'api_key'=>$env['API']['KEY'],
                    'v'=>$env['API']['VER'],
                    'method'=>'updateRegistration',
                    'fr_id'=>@$env['$_get']['fr_id'],
                    $env['API']['AUTH']['FIELD']=>@$env['API']['AUTH']['TOKEN'],
                    'emergency_name'=>$env['$_post']['emergency_name'],
                    'emergency_phone'=>$env['$_post']['emergency_phone']
                )
            );

            //CRUD error checking
            $ur_index=_ctrlr_pro_curl($env,$msgs);
            if(($env['request'][$ur_index]['response']['sxml'] instanceof SimpleXMLElement)===FALSE ||
               ($env['request'][$ur_index]['response']['sxml']->getName()==='updateRegistrationResponse' && strtoupper($env['request'][$ur_index]['response']['sxml']->success)!=='TRUE')){
                $msgs['error'][]='whoops, updating didn\'t work!!!';
            }
            else if($env['request'][$ur_index]['response']['sxml']->getName()==='updateRegistrationResponse'){
                $env['request'][]=array(
                    'url'=>$env['API']['URL']['TR'],
                    'fields'=>array(
                        'api_key'=>$env['API']['KEY'],
                        'v'=>$env['API']['VER'],
                        'method'=>'updateSurveyResponses',
                        'fr_id'=>@$env['$_get']['fr_id'],
                        $env['API']['AUTH']['FIELD']=>@$env['API']['AUTH']['TOKEN'],
                        'survey_id'=>$env['API']['SURVEY']['ID'],
                        ('question_'.$env['API']['SURVEY']['QUESTION'][0])=>(strtoupper(@$env['$_post']['cancer_survivor'])==='ON'?'Yes':'No'),
                        ('question_'.$env['API']['SURVEY']['QUESTION'][1])=>(strtoupper(@$env['$_post']['vegetarian_meal'])==='ON'?'Yes':'No')
                    )
                );

                $usr_idx=_ctrlr_pro_curl($env,$msgs);
                if(($env['request'][$usr_idx]['response']['sxml'] instanceof SimpleXMLElement)===FALSE ||
                   ($env['request'][$usr_idx]['response']['sxml']->getName()==='updateSurveyResponsesResponse' && strtoupper($env['request'][$usr_idx]['response']['sxml']->success)!=='TRUE')){
                    $msgs['error'][]='whoops, updating didn\'t work!!!';
                }
            }
        }
    }
    else if($view=_ctrlr_pro_view(__FUNCTION__)){
        # Read code lines
        $step_03['is_view_data_retrieved']=&$env['flags']['is_view_data_retrieved'];

        $env['request'][]=array(
            'url'=>$env['API']['URL']['TR'],
            'fields'=>array(
                'api_key'=>$env['API']['KEY'],
                'v'=>$env['API']['VER'],
                'method'=>'getRegistration',
                'fr_id'=>@$env['$_get']['fr_id'],
                $env['API']['AUTH']['FIELD']=>@$env['API']['AUTH']['TOKEN']
            )
        );

        $gr_idx=_ctrlr_pro_curl($env,$msgs);
        if(@$env['request'][$gr_idx]['response']['sxml'] instanceof SimpleXMLElement && $env['request'][$gr_idx]['response']['sxml']->getName()==='getRegistrationResponse'){
            $env['request'][]=array(
                'url'=>$env['API']['URL']['TR'],
                'fields'=>array(
                    'api_key'=>$env['API']['KEY'],
                    'v'=>$env['API']['VER'],
                    'method'=>'getSurveyResponses',
                    'fr_id'=>@$env['$_get']['fr_id'],
                    $env['API']['AUTH']['FIELD']=>@$env['API']['AUTH']['TOKEN'],
                    'survey_id'=>$env['API']['SURVEY']['ID'],
                    ('question_'.$env['API']['SURVEY']['QUESTION'][0])=>'TRUE',
                    ('question_'.$env['API']['SURVEY']['QUESTION'][1])=>'TRUE',
                    'requested_only'=>'TRUE'
                )
            );

            $gsr_idx=_ctrlr_pro_curl($env,$msgs);
            if(@$env['request'][$gsr_idx]['response']['sxml'] instanceof SimpleXMLElement && $env['request'][$gsr_idx]['response']['sxml']->getName()==='getSurveyResponsesResponse'){
                $step_03['is_view_data_retrieved']=true;
            }
        }

        if($step_03['is_view_data_retrieved']===TRUE || $env['flags']['is_step_view_on_error']===TRUE){
            //For XPath usage, all namespaces must have a prefix. Encase in a logic check so when debugging no error is thrown.
            if(@$env['request'][$gsr_idx]['response']['sxml'] instanceof SimpleXMLElement){
                ctrlr_online_check_in_pro_xpath_register_namespace($env['request'][$gsr_idx]['response']['sxml']);
            }

            //Get respective XML elements from the response
            $step_03['cancer_survivor']=(is_callable(array(@$env['request'][$gsr_idx]['response']['sxml'],'xpath'))?@$env['request'][$gsr_idx]['response']['sxml']->xpath('/convio:getSurveyResponsesResponse/convio:responses[convio:questionId=\''.$env['API']['SURVEY']['QUESTION'][0].'\']'):NULL);
            $step_03['vegetarian_meal']=(is_callable(array(@$env['request'][$gsr_idx]['response']['sxml'],'xpath'))?@$env['request'][$gsr_idx]['response']['sxml']->xpath('/convio:getSurveyResponsesResponse/convio:responses[convio:questionId=\''.$env['API']['SURVEY']['QUESTION'][1].'\']'):NULL);

            # Replace text placeholders with entries from the step view
            $view['mark_up']=str_replace(
                array(
                    '-TXT-HEADER-',
                    '-TXT-EMERGENCY-NAME-',
                    '-TXT-EMERGENCY-PHONE-',
                    '-TXT-CANCER-SURVIVOR-1-',
                    '-TXT-CANCER-SURVIVOR-2-',
                    '-TXT-CANCER-SURVIVOR-3-',
                    '-TXT-VEGETARIAN-MEAL-1-',
                    '-TXT-VEGETARIAN-MEAL-2-',
                    '-TXT-VEGETARIAN-MEAL-3-',
                    '-DROPDOWN-LANGUGES-'
                ),
                array(
                    lng($view['sxml']->text[$t=0]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    lng($view['sxml']->text[++$t]),
                    $env['lang_select']
                ),
                $view['mark_up']
            );

            # Replace data placeholders with values
            $view['mark_up']=str_replace(
                array(
                    '_EMERGENCY_NAME_',
                    '_EMERGENCY_PHONE_',
                    ('name="cancer_survivor"'),
                    ('name="vegetarian_meal"')
                ),
                array(
                    @$env['request'][$gr_idx]['response']['sxml']->registration->emergencyName,
                    @$env['request'][$gr_idx]['response']['sxml']->registration->emergencyPhone,
                    ('name="cancer_survivor"'.(strtoupper(@$step_03['cancer_survivor'][0]->responseValue)==='YES'?' checked="checked"':'')),
                    ('name="vegetarian_meal"'.(strtoupper(@$step_03['vegetarian_meal'][0]->responseValue)==='YES'?' checked="checked"':''))
                ),
                $view['mark_up']
            );

            //Update output to be rendered
            $out['RPL']['page_title'].=lng($view['sxml']->page_title);
            $out['RPL']['cascading_style_sheet'][]=$view['files']['css'];
            $out['RPL']['javascript'][]=$view['files']['js'];
            $out['RPL']['view']=str_replace((nl().'_STEP_VIEW_'),$view['mark_up'],$out['RPL']['view']);
        }
    }
}
?>
